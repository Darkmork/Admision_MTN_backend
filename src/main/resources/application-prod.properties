# Configuración de producción para Railway
spring.application.name=RobotCode

# Base de datos PostgreSQL (Railway proporciona DATABASE_URL)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Logging para producción - habilitar debug para healthcheck
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.tool.hbm2ddl=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.mail=WARN
logging.level.javax.mail=WARN
logging.level.com.desafios.robotcode.service.EmailService=WARN

# Logging específico para healthcheck y controladores
logging.level.com.desafios.robotcode.controller=INFO
logging.level.com.desafios.robotcode.controller.HealthController=DEBUG
logging.level.com.desafios.robotcode.controller.RootController=DEBUG

# Logging de Spring Boot para debug
logging.level.org.springframework.web=INFO
logging.level.org.springframework.boot.web.embedded.tomcat=INFO

# Zona horaria
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Configuraciones adicionales
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# Configuración de Email - GMAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME:jorge.gangale@mtn.cl}
spring.mail.password=${EMAIL_PASSWORD:eiyv rmur unbh jynh}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.from=${EMAIL_FROM:jorge.gangale@mtn.cl}

# Configuración de la aplicación
app.name=RobotCode Arena
app.base-url=${APP_BASE_URL:https://robotcode-arena.vercel.app}

# Configuración de DeepSeek AI para Robotom
deepseek.api.key=${DEEPSEEK_API_KEY:sk-0834832a545645e88bf30b5e4327777b}
deepseek.api.url=https://api.deepseek.com/v1/chat/completions
deepseek.model=deepseek-chat

# Puerto para Railway - asegurar que use la variable PORT
server.port=${PORT:8080}
server.address=0.0.0.0

# CORS para producción
spring.web.cors.allowed-origins=${CORS_ORIGINS:https://robotcode-arena.vercel.app,https://robotcode-arena.vercel.app/*}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Configuración de timeout para healthcheck
server.connection-timeout=30000
server.tomcat.connection-timeout=30000 